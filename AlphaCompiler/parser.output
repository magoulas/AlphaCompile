Terminals unused in grammar

   COMMENT
   COMMENT1
   SPACE
   OTHER
   OTHER2
   OTHER3
   OTHER4


State 150 conflicts: 1 shift/reduce


Grammar

    0 $accept: program $end

    1 program: stmts stmt
    2        | %empty

    3 stmts: stmts stmt
    4      | %empty

    5 stmt: expr SEMICOLON
    6     | ifstmt
    7     | whilestmt
    8     | forstmt
    9     | returnstmt
   10     | BREAK_ST SEMICOLON
   11     | CONTINUE_ST SEMICOLON
   12     | block
   13     | funcdef
   14     | SEMICOLON

   15 expr: assignexpr
   16     | expr PLUS_OP expr
   17     | expr MINUS_OP expr
   18     | expr MULTI_OP expr
   19     | expr DIVISION_OP expr
   20     | expr PERCENT_OP expr
   21     | expr COMP_BIGGER_OP expr
   22     | expr COMP_BIGGER_EQUAL_OP expr
   23     | expr COMP_LESS_OP expr
   24     | expr COMP_LESS_EQUAL_OP expr
   25     | expr COMP_EQUAL_OP expr
   26     | expr COMP_NOT_EQUAL_OP expr
   27     | expr AND_ST expr
   28     | expr OR_ST expr
   29     | term

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS
   31     | MINUS_OP expr
   32     | NOT_ST expr
   33     | INCREMENT_OP lvalue
   34     | lvalue INCREMENT_OP
   35     | DICREMENT_OP lvalue
   36     | lvalue DICREMENT_OP
   37     | primary

   38 assignexpr: lvalue EQUAL_OP expr

   39 primary: lvalue
   40        | call
   41        | objectdef
   42        | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS
   43        | const

   44 lvalue: ID
   45       | LOCAL_ST ID
   46       | DOUBLE_COLON ID
   47       | member

   48 member: lvalue FULL_STOP ID
   49       | lvalue LEFT_ARRAY expr RIGHT_ARRAY
   50       | call FULL_STOP ID
   51       | call LEFT_ARRAY expr RIGHT_ARRAY

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS
   53     | lvalue callsuffix
   54     | LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   55 callsuffix: normcall
   56           | methodcall

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

   59 elist: expr exprs
   60      | %empty

   61 exprs: COMMA expr exprs
   62      | %empty

   63 objectdef: LEFT_ARRAY elist RIGHT_ARRAY
   64          | LEFT_ARRAY indexed RIGHT_ARRAY

   65 indexed: indexedelem indexedelems

   66 indexedelems: COMMA indexedelem indexedelems
   67             | %empty

   68 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET

   69 $@1: %empty

   70 block: LEFT_CBRACKET $@1 stmts RIGHT_CBRACKET

   71 $@2: %empty

   72 $@3: %empty

   73 $@4: %empty

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

   75 $@5: %empty

   76 $@6: %empty

   77 $@7: %empty

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

   79 const: NUMBER
   80      | STRING
   81      | TRUE_ST
   82      | FALSE_ST
   83      | NIL_ST

   84 $@8: %empty

   85 idlist: ID $@8 IDS
   86       | %empty

   87 $@9: %empty

   88 IDS: COMMA ID $@9 IDS
   89    | %empty

   90 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   91       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

   92 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

   94 returnstmt: RETURN_ST SEMICOLON
   95           | RETURN_ST expr SEMICOLON


Terminals, with rules where they appear

$end (0) 0
error (256)
IF_ST (258) 90 91
ELSE_ST (259) 91
FOR_ST (260) 93
WHILE_ST (261) 92
AND_ST (262) 27
NOT_ST (263) 32
OR_ST (264) 28
LOCAL_ST (265) 45
CONTINUE_ST (266) 11
BREAK_ST (267) 10
TRUE_ST (268) 81
FALSE_ST (269) 82
NIL_ST (270) 83
FUNC_ST (271) 74 78
RETURN_ST (272) 94 95
PLUS_OP (273) 16
MINUS_OP (274) 17 31
EQUAL_OP (275) 38
MULTI_OP (276) 18
DIVISION_OP (277) 19
PERCENT_OP (278) 20
INCREMENT_OP (279) 33 34
DICREMENT_OP (280) 35 36
COMP_EQUAL_OP (281) 25
COMP_NOT_EQUAL_OP (282) 26
COMP_BIGGER_OP (283) 21
COMP_LESS_OP (284) 23
COMP_BIGGER_EQUAL_OP (285) 22
COMP_LESS_EQUAL_OP (286) 24
NUMBER (287) 79
STRING (288) 80
LEFT_CBRACKET (289) 68 70
RIGHT_CBRACKET (290) 68 70
LEFT_PARENTHESIS (291) 30 42 52 54 57 58 74 78 90 91 92 93
RIGHT_PARENTHESIS (292) 30 42 52 54 57 58 74 78 90 91 92 93
SEMICOLON (293) 5 10 11 14 93 94 95
COMMA (294) 61 66 88
COLON (295) 68
DOUBLE_COLON (296) 46
FULL_STOP (297) 48 50
RANGE (298) 58
LEFT_ARRAY (299) 49 51 63 64
RIGHT_ARRAY (300) 49 51 63 64
ID (301) 44 45 46 48 50 58 78 85 88
COMMENT (302)
COMMENT1 (303)
SPACE (304)
OTHER (305)
OTHER2 (306)
OTHER3 (307)
OTHER4 (308)
UMINUS (309)


Nonterminals, with rules where they appear

$accept (55)
    on left: 0
program (56)
    on left: 1 2, on right: 0
stmts (57)
    on left: 3 4, on right: 1 3 70
stmt (58)
    on left: 5 6 7 8 9 10 11 12 13 14, on right: 1 3 90 91 92 93
expr (59)
    on left: 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29, on right:
    5 16 17 18 19 20 21 22 23 24 25 26 27 28 30 31 32 38 49 51 59 61
    68 90 91 92 93 95
term (60)
    on left: 30 31 32 33 34 35 36 37, on right: 29
assignexpr (61)
    on left: 38, on right: 15
primary (62)
    on left: 39 40 41 42 43, on right: 37
lvalue (63)
    on left: 44 45 46 47, on right: 33 34 35 36 38 39 48 49 53
member (64)
    on left: 48 49 50 51, on right: 47
call (65)
    on left: 52 53 54, on right: 40 50 51 52
callsuffix (66)
    on left: 55 56, on right: 53
normcall (67)
    on left: 57, on right: 55
methodcall (68)
    on left: 58, on right: 56
elist (69)
    on left: 59 60, on right: 52 54 57 58 63 93
exprs (70)
    on left: 61 62, on right: 59 61
objectdef (71)
    on left: 63 64, on right: 41
indexed (72)
    on left: 65, on right: 64
indexedelems (73)
    on left: 66 67, on right: 65 66
indexedelem (74)
    on left: 68, on right: 65 66
block (75)
    on left: 70, on right: 12 74 78
$@1 (76)
    on left: 69, on right: 70
funcdef (77)
    on left: 74 78, on right: 13 42 54
$@2 (78)
    on left: 71, on right: 74
$@3 (79)
    on left: 72, on right: 74
$@4 (80)
    on left: 73, on right: 74
$@5 (81)
    on left: 75, on right: 78
$@6 (82)
    on left: 76, on right: 78
$@7 (83)
    on left: 77, on right: 78
const (84)
    on left: 79 80 81 82 83, on right: 43
idlist (85)
    on left: 85 86, on right: 74 78
$@8 (86)
    on left: 84, on right: 85
IDS (87)
    on left: 88 89, on right: 85 88
$@9 (88)
    on left: 87, on right: 88
ifstmt (89)
    on left: 90 91, on right: 6
whilestmt (90)
    on left: 92, on right: 7
forstmt (91)
    on left: 93, on right: 8
returnstmt (92)
    on left: 94 95, on right: 9


State 0

    0 $accept: . program $end

    $end      reduce using rule 2 (program)
    $default  reduce using rule 4 (stmts)

    program  go to state 1
    stmts    go to state 2


State 1

    0 $accept: program . $end

    $end  shift, and go to state 3


State 2

    1 program: stmts . stmt
    3 stmts: stmts . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 27
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 3

    0 $accept: program $end .

    $default  accept


State 4

   90 ifstmt: IF_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt
   91       | IF_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

    LEFT_PARENTHESIS  shift, and go to state 43


State 5

   93 forstmt: FOR_ST . LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 44


State 6

   92 whilestmt: WHILE_ST . LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt

    LEFT_PARENTHESIS  shift, and go to state 45


State 7

   32 term: NOT_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 46
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 8

   45 lvalue: LOCAL_ST . ID

    ID  shift, and go to state 47


State 9

   11 stmt: CONTINUE_ST . SEMICOLON

    SEMICOLON  shift, and go to state 48


State 10

   10 stmt: BREAK_ST . SEMICOLON

    SEMICOLON  shift, and go to state 49


State 11

   81 const: TRUE_ST .

    $default  reduce using rule 81 (const)


State 12

   82 const: FALSE_ST .

    $default  reduce using rule 82 (const)


State 13

   83 const: NIL_ST .

    $default  reduce using rule 83 (const)


State 14

   74 funcdef: FUNC_ST . $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block
   78        | FUNC_ST . ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    ID  shift, and go to state 50

    $default  reduce using rule 71 ($@2)

    $@2  go to state 51


State 15

   94 returnstmt: RETURN_ST . SEMICOLON
   95           | RETURN_ST . expr SEMICOLON

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 52
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 53
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 16

   31 term: MINUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 54
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 17

   33 term: INCREMENT_OP . lvalue

    LOCAL_ST          shift, and go to state 8
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 56
    member  go to state 33
    call    go to state 57


State 18

   35 term: DICREMENT_OP . lvalue

    LOCAL_ST          shift, and go to state 8
    LEFT_PARENTHESIS  shift, and go to state 55
    DOUBLE_COLON      shift, and go to state 24
    ID                shift, and go to state 26

    lvalue  go to state 58
    member  go to state 33
    call    go to state 57


State 19

   79 const: NUMBER .

    $default  reduce using rule 79 (const)


State 20

   80 const: STRING .

    $default  reduce using rule 80 (const)


State 21

   70 block: LEFT_CBRACKET . $@1 stmts RIGHT_CBRACKET

    $default  reduce using rule 69 ($@1)

    $@1  go to state 59


State 22

   30 term: LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS
   42 primary: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 60
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    funcdef     go to state 61
    const       go to state 38


State 23

   14 stmt: SEMICOLON .

    $default  reduce using rule 14 (stmt)


State 24

   46 lvalue: DOUBLE_COLON . ID

    ID  shift, and go to state 62


State 25

   63 objectdef: LEFT_ARRAY . elist RIGHT_ARRAY
   64          | LEFT_ARRAY . indexed RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 63
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr         go to state 64
    term         go to state 29
    assignexpr   go to state 30
    primary      go to state 31
    lvalue       go to state 32
    member       go to state 33
    call         go to state 34
    elist        go to state 65
    objectdef    go to state 35
    indexed      go to state 66
    indexedelem  go to state 67
    const        go to state 38


State 26

   44 lvalue: ID .

    $default  reduce using rule 44 (lvalue)


State 27

    1 program: stmts stmt .
    3 stmts: stmts stmt .

    $end      reduce using rule 1 (program)
    $default  reduce using rule 3 (stmts)


State 28

    5 stmt: expr . SEMICOLON
   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    SEMICOLON             shift, and go to state 81


State 29

   29 expr: term .

    $default  reduce using rule 29 (expr)


State 30

   15 expr: assignexpr .

    $default  reduce using rule 15 (expr)


State 31

   37 term: primary .

    $default  reduce using rule 37 (term)


State 32

   34 term: lvalue . INCREMENT_OP
   36     | lvalue . DICREMENT_OP
   38 assignexpr: lvalue . EQUAL_OP expr
   39 primary: lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    EQUAL_OP          shift, and go to state 82
    INCREMENT_OP      shift, and go to state 83
    DICREMENT_OP      shift, and go to state 84
    LEFT_PARENTHESIS  shift, and go to state 85
    FULL_STOP         shift, and go to state 86
    RANGE             shift, and go to state 87
    LEFT_ARRAY        shift, and go to state 88

    $default  reduce using rule 39 (primary)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 33

   47 lvalue: member .

    $default  reduce using rule 47 (lvalue)


State 34

   40 primary: call .
   50 member: call . FULL_STOP ID
   51       | call . LEFT_ARRAY expr RIGHT_ARRAY
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 92
    FULL_STOP         shift, and go to state 93
    LEFT_ARRAY        shift, and go to state 94

    $default  reduce using rule 40 (primary)


State 35

   41 primary: objectdef .

    $default  reduce using rule 41 (primary)


State 36

   12 stmt: block .

    $default  reduce using rule 12 (stmt)


State 37

   13 stmt: funcdef .

    $default  reduce using rule 13 (stmt)


State 38

   43 primary: const .

    $default  reduce using rule 43 (primary)


State 39

    6 stmt: ifstmt .

    $default  reduce using rule 6 (stmt)


State 40

    7 stmt: whilestmt .

    $default  reduce using rule 7 (stmt)


State 41

    8 stmt: forstmt .

    $default  reduce using rule 8 (stmt)


State 42

    9 stmt: returnstmt .

    $default  reduce using rule 9 (stmt)


State 43

   90 ifstmt: IF_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt
   91       | IF_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt ELSE_ST stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 95
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 44

   93 forstmt: FOR_ST LEFT_PARENTHESIS . elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 96
    objectdef   go to state 35
    const       go to state 38


State 45

   92 whilestmt: WHILE_ST LEFT_PARENTHESIS . expr RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 97
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 46

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   32 term: NOT_ST expr .

    $default  reduce using rule 32 (term)


State 47

   45 lvalue: LOCAL_ST ID .

    $default  reduce using rule 45 (lvalue)


State 48

   11 stmt: CONTINUE_ST SEMICOLON .

    $default  reduce using rule 11 (stmt)


State 49

   10 stmt: BREAK_ST SEMICOLON .

    $default  reduce using rule 10 (stmt)


State 50

   78 funcdef: FUNC_ST ID . $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    $default  reduce using rule 75 ($@5)

    $@5  go to state 98


State 51

   74 funcdef: FUNC_ST $@2 . LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block

    LEFT_PARENTHESIS  shift, and go to state 99


State 52

   94 returnstmt: RETURN_ST SEMICOLON .

    $default  reduce using rule 94 (returnstmt)


State 53

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   95 returnstmt: RETURN_ST expr . SEMICOLON

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    SEMICOLON             shift, and go to state 100


State 54

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   31 term: MINUS_OP expr .

    $default  reduce using rule 31 (term)


State 55

   54 call: LEFT_PARENTHESIS . funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    FUNC_ST  shift, and go to state 14

    funcdef  go to state 101


State 56

   33 term: INCREMENT_OP lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    LEFT_PARENTHESIS  shift, and go to state 85
    FULL_STOP         shift, and go to state 86
    RANGE             shift, and go to state 87
    LEFT_ARRAY        shift, and go to state 88

    $default  reduce using rule 33 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 57

   50 member: call . FULL_STOP ID
   51       | call . LEFT_ARRAY expr RIGHT_ARRAY
   52 call: call . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 92
    FULL_STOP         shift, and go to state 93
    LEFT_ARRAY        shift, and go to state 94


State 58

   35 term: DICREMENT_OP lvalue .
   48 member: lvalue . FULL_STOP ID
   49       | lvalue . LEFT_ARRAY expr RIGHT_ARRAY
   53 call: lvalue . callsuffix

    LEFT_PARENTHESIS  shift, and go to state 85
    FULL_STOP         shift, and go to state 86
    RANGE             shift, and go to state 87
    LEFT_ARRAY        shift, and go to state 88

    $default  reduce using rule 35 (term)

    callsuffix  go to state 89
    normcall    go to state 90
    methodcall  go to state 91


State 59

   70 block: LEFT_CBRACKET $@1 . stmts RIGHT_CBRACKET

    $default  reduce using rule 4 (stmts)

    stmts  go to state 102


State 60

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   30 term: LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_PARENTHESIS     shift, and go to state 103


State 61

   42 primary: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS
   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 104


State 62

   46 lvalue: DOUBLE_COLON ID .

    $default  reduce using rule 46 (lvalue)


State 63

   68 indexedelem: LEFT_CBRACKET . expr COLON expr RIGHT_CBRACKET

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 105
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 64

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   59 elist: expr . exprs

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    COMMA                 shift, and go to state 106

    $default  reduce using rule 62 (exprs)

    exprs  go to state 107


State 65

   63 objectdef: LEFT_ARRAY elist . RIGHT_ARRAY

    RIGHT_ARRAY  shift, and go to state 108


State 66

   64 objectdef: LEFT_ARRAY indexed . RIGHT_ARRAY

    RIGHT_ARRAY  shift, and go to state 109


State 67

   65 indexed: indexedelem . indexedelems

    COMMA  shift, and go to state 110

    $default  reduce using rule 67 (indexedelems)

    indexedelems  go to state 111


State 68

   27 expr: expr AND_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 112
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 69

   28 expr: expr OR_ST . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 113
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 70

   16 expr: expr PLUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 114
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 71

   17 expr: expr MINUS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 115
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 72

   18 expr: expr MULTI_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 116
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 73

   19 expr: expr DIVISION_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 117
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 74

   20 expr: expr PERCENT_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 118
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 75

   25 expr: expr COMP_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 119
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 76

   26 expr: expr COMP_NOT_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 120
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 77

   21 expr: expr COMP_BIGGER_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 121
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 78

   23 expr: expr COMP_LESS_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 122
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 79

   22 expr: expr COMP_BIGGER_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 123
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 80

   24 expr: expr COMP_LESS_EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 124
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 81

    5 stmt: expr SEMICOLON .

    $default  reduce using rule 5 (stmt)


State 82

   38 assignexpr: lvalue EQUAL_OP . expr

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 125
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 83

   34 term: lvalue INCREMENT_OP .

    $default  reduce using rule 34 (term)


State 84

   36 term: lvalue DICREMENT_OP .

    $default  reduce using rule 36 (term)


State 85

   57 normcall: LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 126
    objectdef   go to state 35
    const       go to state 38


State 86

   48 member: lvalue FULL_STOP . ID

    ID  shift, and go to state 127


State 87

   58 methodcall: RANGE . ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    ID  shift, and go to state 128


State 88

   49 member: lvalue LEFT_ARRAY . expr RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 129
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 89

   53 call: lvalue callsuffix .

    $default  reduce using rule 53 (call)


State 90

   55 callsuffix: normcall .

    $default  reduce using rule 55 (callsuffix)


State 91

   56 callsuffix: methodcall .

    $default  reduce using rule 56 (callsuffix)


State 92

   52 call: call LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 130
    objectdef   go to state 35
    const       go to state 38


State 93

   50 member: call FULL_STOP . ID

    ID  shift, and go to state 131


State 94

   51 member: call LEFT_ARRAY . expr RIGHT_ARRAY

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 132
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 95

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   90 ifstmt: IF_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt
   91       | IF_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt ELSE_ST stmt

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_PARENTHESIS     shift, and go to state 133


State 96

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist . SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    SEMICOLON  shift, and go to state 134


State 97

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   92 whilestmt: WHILE_ST LEFT_PARENTHESIS expr . RIGHT_PARENTHESIS stmt

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_PARENTHESIS     shift, and go to state 135


State 98

   78 funcdef: FUNC_ST ID $@5 . LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block

    LEFT_PARENTHESIS  shift, and go to state 136


State 99

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS . $@3 idlist RIGHT_PARENTHESIS $@4 block

    $default  reduce using rule 72 ($@3)

    $@3  go to state 137


State 100

   95 returnstmt: RETURN_ST expr SEMICOLON .

    $default  reduce using rule 95 (returnstmt)


State 101

   54 call: LEFT_PARENTHESIS funcdef . RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 138


State 102

    3 stmts: stmts . stmt
   70 block: LEFT_CBRACKET $@1 stmts . RIGHT_CBRACKET

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    RIGHT_CBRACKET    shift, and go to state 139
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 140
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 103

   30 term: LEFT_PARENTHESIS expr RIGHT_PARENTHESIS .

    $default  reduce using rule 30 (term)


State 104

   42 primary: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS .
   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 141

    $default  reduce using rule 42 (primary)


State 105

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   68 indexedelem: LEFT_CBRACKET expr . COLON expr RIGHT_CBRACKET

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    COLON                 shift, and go to state 142


State 106

   61 exprs: COMMA . expr exprs

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 143
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 107

   59 elist: expr exprs .

    $default  reduce using rule 59 (elist)


State 108

   63 objectdef: LEFT_ARRAY elist RIGHT_ARRAY .

    $default  reduce using rule 63 (objectdef)


State 109

   64 objectdef: LEFT_ARRAY indexed RIGHT_ARRAY .

    $default  reduce using rule 64 (objectdef)


State 110

   66 indexedelems: COMMA . indexedelem indexedelems

    LEFT_CBRACKET  shift, and go to state 63

    indexedelem  go to state 144


State 111

   65 indexed: indexedelem indexedelems .

    $default  reduce using rule 65 (indexed)


State 112

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   27     | expr AND_ST expr .
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80

    $default  reduce using rule 27 (expr)


State 113

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   28     | expr OR_ST expr .

    AND_ST                shift, and go to state 68
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80

    $default  reduce using rule 28 (expr)


State 114

   16 expr: expr . PLUS_OP expr
   16     | expr PLUS_OP expr .
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    $default  reduce using rule 16 (expr)


State 115

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   17     | expr MINUS_OP expr .
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    $default  reduce using rule 17 (expr)


State 116

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   18     | expr MULTI_OP expr .
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 18 (expr)


State 117

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   19     | expr DIVISION_OP expr .
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 19 (expr)


State 118

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   20     | expr PERCENT_OP expr .
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    $default  reduce using rule 20 (expr)


State 119

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   25     | expr COMP_EQUAL_OP expr .
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80

    COMP_EQUAL_OP      error (nonassociative)
    COMP_NOT_EQUAL_OP  error (nonassociative)

    $default  reduce using rule 25 (expr)


State 120

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   26     | expr COMP_NOT_EQUAL_OP expr .
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80

    COMP_EQUAL_OP      error (nonassociative)
    COMP_NOT_EQUAL_OP  error (nonassociative)

    $default  reduce using rule 26 (expr)


State 121

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   21     | expr COMP_BIGGER_OP expr .
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 70
    MINUS_OP     shift, and go to state 71
    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 21 (expr)


State 122

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   23     | expr COMP_LESS_OP expr .
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 70
    MINUS_OP     shift, and go to state 71
    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 23 (expr)


State 123

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   22     | expr COMP_BIGGER_EQUAL_OP expr .
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 70
    MINUS_OP     shift, and go to state 71
    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 22 (expr)


State 124

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   24     | expr COMP_LESS_EQUAL_OP expr .
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr

    PLUS_OP      shift, and go to state 70
    MINUS_OP     shift, and go to state 71
    MULTI_OP     shift, and go to state 72
    DIVISION_OP  shift, and go to state 73
    PERCENT_OP   shift, and go to state 74

    COMP_BIGGER_OP        error (nonassociative)
    COMP_LESS_OP          error (nonassociative)
    COMP_BIGGER_EQUAL_OP  error (nonassociative)
    COMP_LESS_EQUAL_OP    error (nonassociative)

    $default  reduce using rule 24 (expr)


State 125

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   38 assignexpr: lvalue EQUAL_OP expr .

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80

    $default  reduce using rule 38 (assignexpr)


State 126

   57 normcall: LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 145


State 127

   48 member: lvalue FULL_STOP ID .

    $default  reduce using rule 48 (member)


State 128

   58 methodcall: RANGE ID . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 146


State 129

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   49 member: lvalue LEFT_ARRAY expr . RIGHT_ARRAY

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_ARRAY           shift, and go to state 147


State 130

   52 call: call LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 148


State 131

   50 member: call FULL_STOP ID .

    $default  reduce using rule 50 (member)


State 132

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   51 member: call LEFT_ARRAY expr . RIGHT_ARRAY

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_ARRAY           shift, and go to state 149


State 133

   90 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt
   91       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt ELSE_ST stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 150
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 134

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON . expr SEMICOLON elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 151
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 135

   92 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 152
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 136

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS . $@6 idlist RIGHT_PARENTHESIS $@7 block

    $default  reduce using rule 76 ($@6)

    $@6  go to state 153


State 137

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 . idlist RIGHT_PARENTHESIS $@4 block

    ID  shift, and go to state 154

    $default  reduce using rule 86 (idlist)

    idlist  go to state 155


State 138

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS . LEFT_PARENTHESIS elist RIGHT_PARENTHESIS

    LEFT_PARENTHESIS  shift, and go to state 141


State 139

   70 block: LEFT_CBRACKET $@1 stmts RIGHT_CBRACKET .

    $default  reduce using rule 70 (block)


State 140

    3 stmts: stmts stmt .

    $default  reduce using rule 3 (stmts)


State 141

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 156
    objectdef   go to state 35
    const       go to state 38


State 142

   68 indexedelem: LEFT_CBRACKET expr COLON . expr RIGHT_CBRACKET

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    expr        go to state 157
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    const       go to state 38


State 143

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   61 exprs: COMMA expr . exprs

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    COMMA                 shift, and go to state 106

    $default  reduce using rule 62 (exprs)

    exprs  go to state 158


State 144

   66 indexedelems: COMMA indexedelem . indexedelems

    COMMA  shift, and go to state 110

    $default  reduce using rule 67 (indexedelems)

    indexedelems  go to state 159


State 145

   57 normcall: LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 57 (normcall)


State 146

   58 methodcall: RANGE ID LEFT_PARENTHESIS . elist RIGHT_PARENTHESIS

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 160
    objectdef   go to state 35
    const       go to state 38


State 147

   49 member: lvalue LEFT_ARRAY expr RIGHT_ARRAY .

    $default  reduce using rule 49 (member)


State 148

   52 call: call LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 52 (call)


State 149

   51 member: call LEFT_ARRAY expr RIGHT_ARRAY .

    $default  reduce using rule 51 (member)


State 150

   90 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .
   91       | IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt . ELSE_ST stmt

    ELSE_ST  shift, and go to state 161

    ELSE_ST   [reduce using rule 90 (ifstmt)]
    $default  reduce using rule 90 (ifstmt)


State 151

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr . SEMICOLON elist RIGHT_PARENTHESIS stmt

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    SEMICOLON             shift, and go to state 162


State 152

   92 whilestmt: WHILE_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 92 (whilestmt)


State 153

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 . idlist RIGHT_PARENTHESIS $@7 block

    ID  shift, and go to state 154

    $default  reduce using rule 86 (idlist)

    idlist  go to state 163


State 154

   85 idlist: ID . $@8 IDS

    $default  reduce using rule 84 ($@8)

    $@8  go to state 164


State 155

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 idlist . RIGHT_PARENTHESIS $@4 block

    RIGHT_PARENTHESIS  shift, and go to state 165


State 156

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 166


State 157

   16 expr: expr . PLUS_OP expr
   17     | expr . MINUS_OP expr
   18     | expr . MULTI_OP expr
   19     | expr . DIVISION_OP expr
   20     | expr . PERCENT_OP expr
   21     | expr . COMP_BIGGER_OP expr
   22     | expr . COMP_BIGGER_EQUAL_OP expr
   23     | expr . COMP_LESS_OP expr
   24     | expr . COMP_LESS_EQUAL_OP expr
   25     | expr . COMP_EQUAL_OP expr
   26     | expr . COMP_NOT_EQUAL_OP expr
   27     | expr . AND_ST expr
   28     | expr . OR_ST expr
   68 indexedelem: LEFT_CBRACKET expr COLON expr . RIGHT_CBRACKET

    AND_ST                shift, and go to state 68
    OR_ST                 shift, and go to state 69
    PLUS_OP               shift, and go to state 70
    MINUS_OP              shift, and go to state 71
    MULTI_OP              shift, and go to state 72
    DIVISION_OP           shift, and go to state 73
    PERCENT_OP            shift, and go to state 74
    COMP_EQUAL_OP         shift, and go to state 75
    COMP_NOT_EQUAL_OP     shift, and go to state 76
    COMP_BIGGER_OP        shift, and go to state 77
    COMP_LESS_OP          shift, and go to state 78
    COMP_BIGGER_EQUAL_OP  shift, and go to state 79
    COMP_LESS_EQUAL_OP    shift, and go to state 80
    RIGHT_CBRACKET        shift, and go to state 167


State 158

   61 exprs: COMMA expr exprs .

    $default  reduce using rule 61 (exprs)


State 159

   66 indexedelems: COMMA indexedelem indexedelems .

    $default  reduce using rule 66 (indexedelems)


State 160

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist . RIGHT_PARENTHESIS

    RIGHT_PARENTHESIS  shift, and go to state 168


State 161

   91 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 169
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 162

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON . elist RIGHT_PARENTHESIS stmt

    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_PARENTHESIS  shift, and go to state 22
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    $default  reduce using rule 60 (elist)

    expr        go to state 64
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    elist       go to state 170
    objectdef   go to state 35
    const       go to state 38


State 163

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 idlist . RIGHT_PARENTHESIS $@7 block

    RIGHT_PARENTHESIS  shift, and go to state 171


State 164

   85 idlist: ID $@8 . IDS

    COMMA  shift, and go to state 172

    $default  reduce using rule 89 (IDS)

    IDS  go to state 173


State 165

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS . $@4 block

    $default  reduce using rule 73 ($@4)

    $@4  go to state 174


State 166

   54 call: LEFT_PARENTHESIS funcdef RIGHT_PARENTHESIS LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 54 (call)


State 167

   68 indexedelem: LEFT_CBRACKET expr COLON expr RIGHT_CBRACKET .

    $default  reduce using rule 68 (indexedelem)


State 168

   58 methodcall: RANGE ID LEFT_PARENTHESIS elist RIGHT_PARENTHESIS .

    $default  reduce using rule 58 (methodcall)


State 169

   91 ifstmt: IF_ST LEFT_PARENTHESIS expr RIGHT_PARENTHESIS stmt ELSE_ST stmt .

    $default  reduce using rule 91 (ifstmt)


State 170

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist . RIGHT_PARENTHESIS stmt

    RIGHT_PARENTHESIS  shift, and go to state 175


State 171

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS . $@7 block

    $default  reduce using rule 77 ($@7)

    $@7  go to state 176


State 172

   88 IDS: COMMA . ID $@9 IDS

    ID  shift, and go to state 177


State 173

   85 idlist: ID $@8 IDS .

    $default  reduce using rule 85 (idlist)


State 174

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 . block

    LEFT_CBRACKET  shift, and go to state 21

    block  go to state 178


State 175

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS . stmt

    IF_ST             shift, and go to state 4
    FOR_ST            shift, and go to state 5
    WHILE_ST          shift, and go to state 6
    NOT_ST            shift, and go to state 7
    LOCAL_ST          shift, and go to state 8
    CONTINUE_ST       shift, and go to state 9
    BREAK_ST          shift, and go to state 10
    TRUE_ST           shift, and go to state 11
    FALSE_ST          shift, and go to state 12
    NIL_ST            shift, and go to state 13
    FUNC_ST           shift, and go to state 14
    RETURN_ST         shift, and go to state 15
    MINUS_OP          shift, and go to state 16
    INCREMENT_OP      shift, and go to state 17
    DICREMENT_OP      shift, and go to state 18
    NUMBER            shift, and go to state 19
    STRING            shift, and go to state 20
    LEFT_CBRACKET     shift, and go to state 21
    LEFT_PARENTHESIS  shift, and go to state 22
    SEMICOLON         shift, and go to state 23
    DOUBLE_COLON      shift, and go to state 24
    LEFT_ARRAY        shift, and go to state 25
    ID                shift, and go to state 26

    stmt        go to state 179
    expr        go to state 28
    term        go to state 29
    assignexpr  go to state 30
    primary     go to state 31
    lvalue      go to state 32
    member      go to state 33
    call        go to state 34
    objectdef   go to state 35
    block       go to state 36
    funcdef     go to state 37
    const       go to state 38
    ifstmt      go to state 39
    whilestmt   go to state 40
    forstmt     go to state 41
    returnstmt  go to state 42


State 176

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 . block

    LEFT_CBRACKET  shift, and go to state 21

    block  go to state 180


State 177

   88 IDS: COMMA ID . $@9 IDS

    $default  reduce using rule 87 ($@9)

    $@9  go to state 181


State 178

   74 funcdef: FUNC_ST $@2 LEFT_PARENTHESIS $@3 idlist RIGHT_PARENTHESIS $@4 block .

    $default  reduce using rule 74 (funcdef)


State 179

   93 forstmt: FOR_ST LEFT_PARENTHESIS elist SEMICOLON expr SEMICOLON elist RIGHT_PARENTHESIS stmt .

    $default  reduce using rule 93 (forstmt)


State 180

   78 funcdef: FUNC_ST ID $@5 LEFT_PARENTHESIS $@6 idlist RIGHT_PARENTHESIS $@7 block .

    $default  reduce using rule 78 (funcdef)


State 181

   88 IDS: COMMA ID $@9 . IDS

    COMMA  shift, and go to state 172

    $default  reduce using rule 89 (IDS)

    IDS  go to state 182


State 182

   88 IDS: COMMA ID $@9 IDS .

    $default  reduce using rule 88 (IDS)
